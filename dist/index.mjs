export*from"@tanstack/react-query";import{useQuery as me}from"@tanstack/react-query";import Y from"eventemitter3";function S(e,t){let s={...e};if(e instanceof Object&&t instanceof Object){for(let i in t)if(i in e){let r=e[i],p=t[i];typeof r==typeof p&&(Array.isArray(r)&&Array.isArray(p)||r!==null&&!Array.isArray(r)&&typeof r=="object"&&!Array.isArray(p)&&typeof p=="object"||typeof r!="object"&&typeof p!="object")&&(typeof r=="object"&&r!==null&&!Array.isArray(r)?s[i]=S(r,p):s[i]=p)}}return s}var U=async(e,t)=>{let s=t.reduce((i,r)=>i.concat(e.getQueriesData({queryKey:r})),[]);return await Promise.all(s.map(([i])=>e.cancelQueries({queryKey:i}))),s};function A(e){return e.replace(/^\/+/,"").replace(/\/+$/,"")}var B=new Y,E={once:(e,t)=>{B.once(e,t)},emit:(e,t)=>{B.emit(e,t)}};var C=(e,t)=>{let s=A(e.path.replace(/{(\w+)}/g,(i,r)=>e.params[r].toString()));return t?`${s}/`:s};import{QueryClient as ie,QueryClientProvider as ue}from"@tanstack/react-query";import{ReactQueryDevtools as ye}from"@tanstack/react-query-devtools";import F,{createContext as pe,useCallback as k,useContext as ce,useMemo as W}from"react";var L=class e extends Error{constructor(s,i,r){super(s);this.message=s;this.status=i;this.data=r;Object.setPrototypeOf(this,e.prototype),this.name=this.constructor.name,typeof Error.captureStackTrace=="function"?Error.captureStackTrace(this,this.constructor):this.stack=new Error(s).stack,this.stack=new Error().stack,console.error(this.message,this)}};var X=e=>{if(e!==null&&typeof e=="object"){let t={};return Object.entries(e).forEach(([i,r])=>{(r||typeof r=="boolean"||typeof r=="number")&&(t[i]=r)}),t}return{}};function q(e){return encodeURIComponent(e).replace(/%3A/gi,":").replace(/%24/g,"$").replace(/%2C/gi,",").replace(/%20/g,"+").replace(/%5B/gi,"[").replace(/%5D/gi,"]")}var $=e=>{let{onSuccess:t,onError:s}=e,i=e.data instanceof FormData,r=(()=>{let a=e.url;if(e.params){let n=X(e.params);if(e.queryParamsSerializer)a+=`?${e.queryParamsSerializer(e.params)}`;else if(Object.keys(n).length>0){let y=[];for(let P in n)n.hasOwnProperty(P)&&(Array.isArray(n[P])?n[P].forEach(g=>{y.push(`${q(P)}${e.queryArrayParamStyle==="indexedArray"?"[]":""}=${q(g)}`)}):y.push(`${q(P)}=${q(n[P])}`));a+=`?${y.join("&")}`}}let[u,c]=a.split("?");return`${u}${c?`?${c}`:""}`})(),p=i?e.data:e.data?JSON.stringify(e.data):"",o={method:e.method,headers:{...!i&&{"Content-Type":"application/json"},...e.authorization&&{Authorization:e.authorization},...e.headers},...p&&{body:p},...e.options};return fetch(r,o).then(async a=>{let u=await(async()=>{try{let n=a.headers.get("Content-Type")?.toLowerCase()||"";return n.includes("application/json")?await a.json():n.includes("text/plain")||n.includes("text/csv")||n.includes("application/xml")||n.includes("text/xml")||n.includes("application/javascript")||n.includes("text/html")?await a.text():n.includes("multipart/form-data")?await a.formData():await a.blob()}catch(n){throw console.error("Error handling response:",n),n}})(),c={};return a.headers.forEach((n,y)=>{c[y]=n}),{status:a.status,statusText:a.statusText,headers:c,data:u}}).then(a=>{if(a.status<200||a.status>=300){let u=new L(`Request failed with status code: ${a.status}`,a.status,a.data);return s&&s(u,e),Promise.reject(u)}return t&&t(a,e),Promise.resolve(a)}).catch(a=>Promise.reject(new L(a.message)))};import I,{useCallback as Z}from"react";import{resolveValue as V,useToaster as ee}from"react-hot-toast/headless";var te=(()=>{let e;return()=>{if(e===void 0&&typeof window<"u"){let t=matchMedia("(prefers-reduced-motion: reduce)");e=!t||t.matches}return e}})();function re({id:e,className:t,style:s,onHeightUpdate:i,children:r}){let p=Z(o=>{if(o){let a=()=>{let{height:u}=o.getBoundingClientRect();i(e,u)};a(),new MutationObserver(a).observe(o,{subtree:!0,childList:!0,characterData:!0})}},[e,i]);return I.createElement("div",{ref:p,className:t,style:s},r)}var ae=(e,t)=>{let s=e.includes("top"),i=s?{top:0}:{bottom:0},r=e.includes("center")?{justifyContent:"center"}:e.includes("right")?{justifyContent:"flex-end"}:{};return{left:0,right:0,display:"flex",position:"absolute",transition:te()?void 0:"all 230ms cubic-bezier(.21,1.02,.73,1)",transform:`translateY(${t*(s?1:-1)}px)`,...i,...r}},O=16;function v({reverseOrder:e,position:t="top-center",toastOptions:s,gutter:i,children:r,containerStyle:p,containerClassName:o}){let{toasts:a,handlers:u}=ee(s);return I.createElement("div",{style:{position:"fixed",zIndex:9999,top:O,left:O,right:O,bottom:O,pointerEvents:"none",...p},className:o,onMouseEnter:u.startPause,onMouseLeave:u.endPause},a.map(c=>{let n=c.position||t,y={...c,position:n},P=u.calculateOffset(y,{reverseOrder:e,gutter:i,defaultPosition:t}),g=ae(n,P);return I.createElement(re,{id:y.id,key:y.id,onHeightUpdate:u.updateHeight,style:{...g,pointerEvents:"auto"}},y.type==="custom"?V(c.message,y):r?r(y):I.createElement("div",{style:{display:c.visible?"flex":"none"}},V(y.message,y)))}))}import j from"react-hot-toast/headless";import{ToastBar as se,resolveValue as oe}from"react-hot-toast";var{remove:Ve,...ne}=j,w=Object.assign((...e)=>j(...e),ne),ve=se,je=oe;var z=pe({apiUrl:"",apiEnsureTrailingSlash:!1,apiClient:$,toastUndo:()=>{}}),R=()=>ce(z);function Ze({children:e,config:t={},apiUrl:s,apiClient:i=$,apiEnsureTrailingSlash:r=!1,apiAuthorization:p,apiHeaders:o,apiOnSuccess:a,apiOnError:u,isDevTools:c,devToolsOptions:n,toast:y}){let P=W(()=>new ie({...t,defaultOptions:{...t?.defaultOptions,queries:{gcTime:3e5,staleTime:3e5,retry:!1,...t?.defaultOptions?.queries}}}),[]),g=k(m=>{let T=p?p():"",h=o?o():{},Q=(...D)=>{a&&a(...D),m.onSuccess&&m.onSuccess(...D)},f=(...D)=>{u&&u(...D),m.onError&&m.onError(...D)};return i({...m,headers:m.headers?{...h,...m.headers}:h,authorization:m.authorization||T,onSuccess:Q,onError:f})},[]),K=k(m=>{let T=!1;w.dismiss();let h=()=>{T=!0,E.emit("end",!0),w.dismiss()},Q=y?.customUndoContent?y?.customUndoContent({message:m.message,onUndo:h,type:m.type}):null;w.success(f=>(!f.visible&&!T&&(T=!0,E.emit("end",!1)),Q||F.createElement(F.Fragment,null,m.message,F.createElement("span",{style:{marginLeft:"10px",cursor:"pointer"},onClick:h,role:"button",tabIndex:0,"aria-label":"Undo",title:"Undo"},"UNDO"))),{duration:y?.globalProps?.toastOptions?.duration||5e3})},[]),l=W(()=>({apiUrl:A(s),apiClient:g,apiEnsureTrailingSlash:r,toastUndo:K}),[s,g,K,r]);return F.createElement(ue,{client:P},F.createElement(v,{...y?.globalProps},y?.wrapper),F.createElement(z.Provider,{value:l},e),c&&F.createElement(ye,{buttonPosition:"bottom-right",initialIsOpen:!1,...n}))}var st=({queryOptions:e,resource:t,params:s={},apiClientParams:i})=>{let{apiUrl:r,apiClient:p,apiEnsureTrailingSlash:o}=R();return me({...e,queryKey:["get-list",t.path,t.params,s,...e?.queryKey?e.queryKey:[]],queryFn:async({queryKey:u})=>{let c={resource:t,params:s,queryKey:u},n=`${r}/${C(c.resource,o)}`;return e?.queryFn?await e?.queryFn({apiClient:p,variables:c,url:n}):await p({url:n,method:"GET",params:s,...i})}})};import{useInfiniteQuery as le}from"@tanstack/react-query";var pt=({queryOptions:e,resource:t,params:s={},apiClientParams:i,pagination:r})=>{let{apiUrl:p,apiClient:o,apiEnsureTrailingSlash:a}=R();return le({initialPageParam:1,getNextPageParam:(...c)=>{let n=c[0],y=Number(c[2]);if(n?.data?.length)return y+1},getPreviousPageParam:(...c)=>{let n=Number(c[2]);if(!(n<=1))return n-1},...e,queryKey:["get-infinite-list",t.path,t.params,r,s,...e?.queryKey?e.queryKey:[]],queryFn:async({queryKey:c,pageParam:n})=>{let y={resource:t,params:{...s,[r.page[0]]:n,[r.per_page[0]]:r.per_page[1]},queryKey:c},P=`${p}/${C(y.resource,a)}`;return e?.queryFn?await e?.queryFn({apiClient:o,variables:y,url:P}):await o({url:P,method:"GET",params:y.params,...i})}})};import{useQuery as Te}from"@tanstack/react-query";var ft=({resource:e,id:t,queryOptions:s,params:i={},apiClientParams:r})=>{let{apiUrl:p,apiClient:o,apiEnsureTrailingSlash:a}=R();return Te({...s,queryKey:["get-one",e.path,e.params,String(t),i,...s?.queryKey?s.queryKey:[]],queryFn:async({queryKey:c})=>{let n={id:t,resource:e,params:i,queryKey:c},y=`${p}/${C(n.resource,!0)}`;return s?.queryFn?await s?.queryFn({apiClient:o,variables:n,url:y}):await o({url:`${y}${n.id}${a?"/":""}`,method:"GET",params:i,...r})}})};import{useMutation as de,useQueryClient as he}from"@tanstack/react-query";import{useRef as Pe}from"react";var N=({queryClient:e,data:t,queryKeysOne:s,queryKeysList:i,queryKeysInfiniteList:r})=>{let p=o=>!o||!(o.data instanceof Array)?o:{...o,data:[t,...o.data]};s&&s.forEach(o=>{e.setQueryData(o,t)}),i&&i.forEach(o=>{e.setQueriesData({queryKey:o},p)}),r&&r.forEach(o=>{e.setQueriesData({queryKey:o},a=>a&&{...a,pages:a.pages.map(p)})})};var G=({queryClient:e,ids:t,queryKeysOne:s,queryKeysList:i,queryKeysInfiniteList:r})=>{let p=o=>!o||!(o.data instanceof Array)?o:{...o,data:o.data.filter(a=>!t.some(u=>String(u)===String(a.id)))};s&&s.forEach(o=>{e.removeQueries({queryKey:o})}),i&&i.forEach(o=>{e.setQueriesData({queryKey:o},p)}),r&&r.forEach(o=>{e.setQueriesData({queryKey:o},a=>a&&{...a,pages:a.pages.map(p)})})};var d={getOne:(e,t)=>["get-one",e.path,e.params,String(t)],getOneArray:(e,t)=>t.map(s=>["get-one",e.path,e.params,String(s)]),getList:e=>["get-list",e.path,e.params],getInfiniteList:e=>["get-infinite-list",e.path,e.params],getDataQuery:e=>["query-data",e.path,e.params]};import{deepEqual as fe}from"fast-equals";var gt=({queryClient:e,queryKeys:t})=>{e.invalidateQueries({predicate:s=>{let i=s.queryKey;return t.some(p=>p.every(o=>i.some(a=>fe(a,o))))}})};var M=({queryClient:e,queryKeys:t})=>{t.forEach(s=>{e.invalidateQueries({queryKey:s})})};var H=({queryClient:e,data:t,ids:s,queryKeysOne:i,queryKeysList:r,queryKeysInfiniteList:p})=>{let o=a=>!a||!(a.data instanceof Array)?a:{...a,data:a.data.map(u=>s.some(c=>String(c)===String(u.id))?S(u,t):u)};i&&i.forEach(a=>{e.setQueriesData({queryKey:a},u=>!u||!(u.data instanceof Object)||!(t instanceof Object)?u:{...u,data:S(u.data,t)})}),r&&r.forEach(a=>{e.setQueriesData({queryKey:a},o)}),p&&p.forEach(a=>{e.setQueriesData({queryKey:a},u=>u&&{...u,pages:u.pages.map(o)})})};var _=({resourcePath:e,mutationOptions:t,mode:s={optimistic:!0,undoable:!0},extraResources:i=[],type:r="many"})=>{let{apiUrl:p,apiClient:o,apiEnsureTrailingSlash:a,toastUndo:u}=R(),c=he(),n=Pe([]),y=()=>{n.current.forEach(([l,m])=>{c.setQueryData(l,m)})},{mutate:P,...g}=de({...t,mutationKey:[r==="many"?"delete-many":"delete-one",e,...t?.mutationKey?t.mutationKey:[]],mutationFn:async l=>{let m=`${p}/${C(l.resource,!0)}`;if(t?.mutationFn)return await t?.mutationFn({apiClient:o,variables:l,url:m});let T=r==="many"?l.ids:[l.id],h=await Promise.allSettled(T.map(f=>o({url:`${m}${f}${a?"/":""}`,method:"DELETE",...l.apiClientParams}))),Q=[];return h.forEach(f=>{if(f.status==="fulfilled")Q.push(f.value);else throw f.reason}),r==="many"?Q:Q[0]},onSuccess:(...l)=>{let m=l[1],T=[d.getList(m.resource),d.getInfiniteList(m.resource)];i.forEach(h=>{T.push(d.getList(h)),T.push(d.getInfiniteList(h))}),M({queryClient:c,queryKeys:T}),t?.onSuccess&&t.onSuccess(...l)},onError:(...l)=>{t?.onError&&t.onError(...l),y()}});return{mutation:g,delete:async({resourceParams:l,undoMessage:m,...T})=>{let h={path:e,params:l},Q=r==="many"?T.ids:[T.id];if(s.optimistic){let f=d.getOneArray(h,Q),D=[d.getList(h)],x=[d.getInfiniteList(h)];i.forEach(b=>{f.push(...d.getOneArray(b,Q)),D.push(d.getList(b)),x.push(d.getInfiniteList(b))}),n.current=await U(c,[...f,...D,...x]),G({queryClient:c,ids:Q,queryKeysOne:f,queryKeysList:D,queryKeysInfiniteList:x})}if(s.undoable){let f=Q.length>1;E.once("end",D=>{D?y():P({...T,resource:h})}),u({message:m||`Element${f?"s":""} deleted`,type:f?"delete-many":"delete-one"})}else P({...T,resource:h})}}},Bt=e=>_({...e,type:"one"}),Vt=e=>_({...e,type:"many"});import{useMutation as Qe,useQueryClient as De}from"@tanstack/react-query";import{useRef as ge}from"react";var J=({resourcePath:e,mutationOptions:t,mode:s={optimistic:!0,undoable:!0},extraResources:i=[],type:r="many"})=>{let{apiUrl:p,apiClient:o,apiEnsureTrailingSlash:a,toastUndo:u}=R(),c=De(),n=ge([]),y=()=>{n.current.forEach(([l,m])=>{c.setQueryData(l,m)})},{mutate:P,...g}=Qe({...t,mutationKey:[r==="many"?"update-many":"update-one",e,...t?.mutationKey?t.mutationKey:[]],mutationFn:async l=>{let m=`${p}/${C(l.resource,!0)}`;if(t?.mutationFn)return await t?.mutationFn({apiClient:o,variables:l,url:m});let T=r==="many"?l.ids:[l.id],h=await Promise.allSettled(T.map(f=>o({url:`${m}${f}${a?"/":""}`,method:"PATCH",data:l.data,...l.apiClientParams}))),Q=[];return h.forEach(f=>{if(f.status==="fulfilled")Q.push(f.value);else throw f.reason}),r==="many"?Q:Q[0]},onSuccess:(...l)=>{let m=l[1];if(!s.optimistic){let T=r==="many"?m.ids:[m.id],h=[...d.getOneArray(m.resource,T),d.getList(m.resource),d.getInfiniteList(m.resource)];i.forEach(Q=>{h.push(...d.getOneArray(Q,T)),h.push(d.getList(Q)),h.push(d.getInfiniteList(Q))}),M({queryClient:c,queryKeys:h})}t?.onSuccess&&t.onSuccess(...l)},onError:(...l)=>{t?.onError&&t.onError(...l),y()}});return{mutation:g,update:async({resourceParams:l,undoMessage:m,...T})=>{let h={path:e,params:l},Q=r==="many"?T.ids:[T.id];if(s.optimistic){let f=d.getOneArray(h,Q),D=[d.getList(h)],x=[d.getInfiniteList(h)];i.forEach(b=>{f.push(...d.getOneArray(b,Q)),D.push(d.getList(b)),x.push(d.getInfiniteList(b))}),n.current=await U(c,[...f,...D,...x]),H({queryClient:c,data:T.data,ids:Q,queryKeysOne:f,queryKeysList:D,queryKeysInfiniteList:x})}if(s.undoable){let f=Q.length>1;E.once("end",D=>{D?y():P({...T,resource:h})}),u({message:m||`Element${f?"s":""} updated`,type:f?"update-many":"update-one"})}else P({...T,resource:h})}}},Ht=e=>J({...e,type:"one"}),_t=e=>J({...e,type:"many"});import{useMutation as Ce,useQueryClient as Re}from"@tanstack/react-query";var tr=({resourcePath:e,mutationOptions:t,extraResources:s=[]})=>{let{apiUrl:i,apiClient:r,apiEnsureTrailingSlash:p}=R(),o=Re(),{mutate:a,...u}=Ce({...t,mutationKey:["create",e,...t?.mutationKey?t.mutationKey:[]],mutationFn:async n=>{let y=`${i}/${C(n.resource,p)}`;return t?.mutationFn?await t?.mutationFn({apiClient:r,variables:n,url:y}):await r({url:y,method:"POST",data:n.data,...n.apiClientParams})},onSuccess:(...n)=>{let y=n[0];if(y){let P=n[1],{id:g}=y.data,K=[d.getOne(P.resource,g)],l=[d.getList(P.resource)],m=[d.getInfiniteList(P.resource)];s.forEach(T=>{K.push(d.getOne(T,g)),l.push(d.getList(T)),m.push(d.getInfiniteList(T))}),N({queryClient:o,data:y,queryKeysOne:K.map(T=>[...T,{}]),queryKeysList:l,queryKeysInfiniteList:m}),M({queryClient:o,queryKeys:[...l,...m]})}t?.onSuccess&&t.onSuccess(...n)}});return{mutation:u,create:({resourceParams:n,...y})=>{a({...y,resource:{path:e,params:n}})}}};import{useQuery as Ke}from"@tanstack/react-query";var nr=({queryOptions:e,resource:t,params:s={},apiClientParams:i})=>{let{apiUrl:r,apiClient:p,apiEnsureTrailingSlash:o}=R();return Ke({...e,queryKey:["query-data",t.path,t.params,s,...e?.queryKey?e.queryKey:[]],queryFn:async({queryKey:u})=>{let c={resource:t,params:s,queryKey:u},n=`${r}/${C(c.resource,o)}`;return e?.queryFn?await e?.queryFn({apiClient:p,variables:c,url:n}):await p({url:n,method:"GET",params:s,...i})}})};import{useMutation as xe}from"@tanstack/react-query";var cr=({resourcePath:e,mutationOptions:t})=>{let{apiUrl:s,apiClient:i,apiEnsureTrailingSlash:r}=R(),{mutate:p,...o}=xe({...t,mutationKey:["mutate-data",e,...t?.mutationKey?t.mutationKey:[]],mutationFn:async u=>{let c=`${s}/${C(u.resource,r)}`;return t?.mutationFn?await t?.mutationFn({apiClient:i,variables:u,url:c}):await i({url:c,data:u.data,...u.apiClientParams})}});return{mutation:o,mutate:async({resourceParams:u,...c})=>{p({...c,resource:{path:e,params:u}})}}};export{L as CustomError,Ze as RQWrapper,ve as ToastBar,N as addItemFromQueryCache,G as deleteItemsFromQueryCache,$ as fetcher,C as getUrlFromResource,d as helpersQueryKeys,gt as invalidateMatchingQueries,M as invalidateQueries,je as resolveToastValue,w as toast,H as updateItemsFromQueryCache,tr as useCreate,cr as useDataMutate,nr as useDataQuery,Vt as useDeleteMany,Bt as useDeleteOne,pt as useGetInfiniteList,st as useGetList,ft as useGetOne,R as useRQWrapperContext,_t as useUpdateMany,Ht as useUpdateOne};
//# sourceMappingURL=index.mjs.map