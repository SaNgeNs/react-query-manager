export*from"@tanstack/react-query";import{useQuery as me}from"@tanstack/react-query";import Y from"eventemitter3";function S(e,t){let s={...e};if(e instanceof Object&&t instanceof Object){for(let i in t)if(i in e){let r=e[i],p=t[i];typeof r==typeof p&&(Array.isArray(r)&&Array.isArray(p)||r!==null&&!Array.isArray(r)&&typeof r=="object"&&!Array.isArray(p)&&typeof p=="object"||typeof r!="object"&&typeof p!="object")&&(typeof r=="object"&&r!==null&&!Array.isArray(r)?s[i]=S(r,p):s[i]=p)}}return s}var U=async(e,t)=>{let s=t.reduce((i,r)=>i.concat(e.getQueriesData({queryKey:r})),[]);return await Promise.all(s.map(([i])=>e.cancelQueries({queryKey:i}))),s};function A(e){return e.replace(/^\/+/,"").replace(/\/+$/,"")}var B=new Y,b={once:(e,t)=>{B.once(e,t)},emit:(e,t)=>{B.emit(e,t)}};var g=(e,t)=>{let s=A(e.path.replace(/{(\w+)}/g,(i,r)=>e.params[r].toString()));return t?`${s}/`:s};import{QueryClient as ie,QueryClientProvider as ue}from"@tanstack/react-query";import{ReactQueryDevtools as pe}from"@tanstack/react-query-devtools";import E,{createContext as ce,useCallback as k,useContext as ye,useMemo as W}from"react";var L=class e extends Error{constructor(s,i,r){super(s);this.message=s;this.status=i;this.data=r;Object.setPrototypeOf(this,e.prototype),this.name=this.constructor.name,typeof Error.captureStackTrace=="function"?Error.captureStackTrace(this,this.constructor):this.stack=new Error(s).stack,this.stack=new Error().stack,console.error(this.message,this)}};var X=e=>{if(e!==null&&typeof e=="object"){let t={};return Object.entries(e).forEach(([i,r])=>{(r||typeof r=="boolean"||typeof r=="number")&&(t[i]=r)}),t}return{}};function q(e){return encodeURIComponent(e).replace(/%3A/gi,":").replace(/%24/g,"$").replace(/%2C/gi,",").replace(/%20/g,"+").replace(/%5B/gi,"[").replace(/%5D/gi,"]")}var $=e=>{let{onSuccess:t,onError:s}=e,i=e.data instanceof FormData,r=(()=>{let a=e.url;if(e.params){let o=X(e.params);if(e.queryParamsSerializer)a+=`?${e.queryParamsSerializer(e.params)}`;else if(Object.keys(o).length>0){let y=[];for(let P in o)o.hasOwnProperty(P)&&(Array.isArray(o[P])?o[P].forEach(Q=>{y.push(`${q(P)}${e.queryArrayParamStyle==="indexedArray"?"[]":""}=${q(Q)}`)}):y.push(`${q(P)}=${q(o[P])}`));a+=`?${y.join("&")}`}}let[u,c]=a.split("?");return`${u}${c?`?${c}`:""}`})(),p=i?e.data:e.data?JSON.stringify(e.data):"",n={method:e.method,headers:{...!i&&{"Content-Type":"application/json"},...e.authorization&&{Authorization:e.authorization},...e.headers},...p&&{body:p},...e.options};return fetch(r,n).then(async a=>{let u=await(async()=>{try{let o=a.headers.get("Content-Type")?.toLowerCase()||"";return o.includes("application/json")?await a.json():o.includes("text/plain")||o.includes("text/csv")||o.includes("application/xml")||o.includes("text/xml")||o.includes("application/javascript")||o.includes("text/html")?await a.text():o.includes("multipart/form-data")?await a.formData():await a.blob()}catch(o){throw console.error("Error handling response:",o),o}})(),c={};return a.headers.forEach((o,y)=>{c[y]=o}),{status:a.status,statusText:a.statusText,headers:c,data:u}}).then(a=>{if(a.status<200||a.status>=300){let u=new L(`Request failed with status code: ${a.status}`,a.status,a.data);return s&&s(u,e),Promise.reject(u)}return t&&t(a,e),Promise.resolve(a)}).catch(a=>Promise.reject(new L(a.message)))};import I,{useCallback as Z}from"react";import{resolveValue as V,useToaster as ee}from"react-hot-toast/headless";var te=(()=>{let e;return()=>{if(e===void 0&&typeof window<"u"){let t=matchMedia("(prefers-reduced-motion: reduce)");e=!t||t.matches}return e}})();function re({id:e,className:t,style:s,onHeightUpdate:i,children:r}){let p=Z(n=>{if(n){let a=()=>{let{height:u}=n.getBoundingClientRect();i(e,u)};a(),new MutationObserver(a).observe(n,{subtree:!0,childList:!0,characterData:!0})}},[e,i]);return I.createElement("div",{ref:p,className:t,style:s},r)}var ae=(e,t)=>{let s=e.includes("top"),i=s?{top:0}:{bottom:0},r=e.includes("center")?{justifyContent:"center"}:e.includes("right")?{justifyContent:"flex-end"}:{};return{left:0,right:0,display:"flex",position:"absolute",transition:te()?void 0:"all 230ms cubic-bezier(.21,1.02,.73,1)",transform:`translateY(${t*(s?1:-1)}px)`,...i,...r}},O=16;function v({reverseOrder:e,position:t="top-center",toastOptions:s,gutter:i,children:r,containerStyle:p,containerClassName:n}){let{toasts:a,handlers:u}=ee(s);return I.createElement("div",{style:{position:"fixed",zIndex:9999,top:O,left:O,right:O,bottom:O,pointerEvents:"none",...p},className:n,onMouseEnter:u.startPause,onMouseLeave:u.endPause},a.map(c=>{let o=c.position||t,y={...c,position:o},P=u.calculateOffset(y,{reverseOrder:e,gutter:i,defaultPosition:t}),Q=ae(o,P);return I.createElement(re,{id:y.id,key:y.id,onHeightUpdate:u.updateHeight,style:{...Q,pointerEvents:"auto"}},y.type==="custom"?V(c.message,y):r?r(y):I.createElement("div",{style:{display:c.visible?"flex":"none"}},V(y.message,y)))}))}import j from"react-hot-toast/headless";import{ToastBar as se,resolveValue as oe}from"react-hot-toast";var{remove:Ve,...ne}=j,w=Object.assign((...e)=>j(...e),ne),ve=se,je=oe;var z=ce({apiUrl:"",apiEnsureTrailingSlash:!1,apiClient:$,toastUndo:()=>{}}),R=()=>ye(z);function Ze({children:e,config:t={},apiUrl:s,apiClient:i=$,apiEnsureTrailingSlash:r=!1,apiAuthorization:p,apiHeaders:n,apiOnSuccess:a,apiOnError:u,isDevTools:c,devToolsOptions:o,toast:y}){let P=W(()=>new ie({...t,defaultOptions:{...t?.defaultOptions,queries:{gcTime:3e5,staleTime:3e5,retry:!1,...t?.defaultOptions?.queries}}}),[]),Q=k(m=>{let T=p?p():"",d=n?n():{},D=(...F)=>{a&&a(...F),m.onSuccess&&m.onSuccess(...F)},h=(...F)=>{u&&u(...F),m.onError&&m.onError(...F)};return i({...m,headers:m.headers?{...d,...m.headers}:d,authorization:m.authorization||T,onSuccess:D,onError:h})},[]),C=k(m=>{let T=!1;w.dismiss();let d=()=>{T=!0,b.emit("end",!0),w.dismiss()},D=y?.customUndoContent?y?.customUndoContent({message:m.message,onUndo:d,type:m.type}):null;w.success(h=>(!h.visible&&!T&&(T=!0,b.emit("end",!1)),D||E.createElement(E.Fragment,null,m.message,E.createElement("span",{style:{marginLeft:"10px",cursor:"pointer"},onClick:d,role:"button",tabIndex:0,"aria-label":"Undo",title:"Undo"},"UNDO"))),{duration:y?.globalProps?.toastOptions?.duration||5e3})},[]),l=W(()=>({apiUrl:A(s),apiClient:Q,apiEnsureTrailingSlash:r,toastUndo:C}),[s,Q,C,r]);return E.createElement(ue,{client:P},E.createElement(v,{...y?.globalProps},y?.wrapper),E.createElement(z.Provider,{value:l},e),c&&E.createElement(pe,{buttonPosition:"bottom-right",initialIsOpen:!1,...o}))}var st=({queryOptions:e,resource:t,params:s={},apiClientParams:i})=>{let{apiUrl:r,apiClient:p,apiEnsureTrailingSlash:n}=R();return me({...e,queryKey:["get-list",t.path,t.params,s,...e?.queryKey?e.queryKey:[]],queryFn:async({queryKey:u})=>{let c={resource:t,params:s,queryKey:u},o=`${r}/${g(c.resource,n)}`;return e?.queryFn?await e?.queryFn({apiClient:p,variables:c,url:o}):await p({url:o,method:"GET",params:s,...i})}})};import{useInfiniteQuery as le}from"@tanstack/react-query";var ct=({queryOptions:e,resource:t,params:s={},apiClientParams:i,pagination:r})=>{let{apiUrl:p,apiClient:n,apiEnsureTrailingSlash:a}=R();return le({initialPageParam:1,getNextPageParam:(...c)=>{let o=c[0],y=Number(c[2]);if(o?.data?.length)return y+1},getPreviousPageParam:(...c)=>{let o=Number(c[2]);if(!(o<=1))return o-1},...e,queryKey:["get-infinite-list",t.path,t.params,r,s,...e?.queryKey?e.queryKey:[]],queryFn:async({queryKey:c,pageParam:o})=>{let y={resource:t,params:{...s,[r.page[0]]:o,[r.per_page[0]]:r.per_page[1]},queryKey:c},P=`${p}/${g(y.resource,a)}`;return e?.queryFn?await e?.queryFn({apiClient:n,variables:y,url:P}):await n({url:P,method:"GET",params:y.params,...i})}})};import{useQuery as Te}from"@tanstack/react-query";var ht=({resource:e,id:t,queryOptions:s,params:i={},apiClientParams:r})=>{let{apiUrl:p,apiClient:n,apiEnsureTrailingSlash:a}=R();return Te({...s,queryKey:["get-one",e.path,e.params,String(t),i,...s?.queryKey?s.queryKey:[]],queryFn:async({queryKey:c})=>{let o={id:t,resource:e,params:i,queryKey:c},y=`${p}/${g(o.resource,!0)}`;return s?.queryFn?await s?.queryFn({apiClient:n,variables:o,url:y}):await n({url:`${y}${o.id}${a?"/":""}`,method:"GET",params:i,...r})}})};import{useMutation as fe,useQueryClient as de}from"@tanstack/react-query";import{useRef as Pe}from"react";var N=({queryClient:e,data:t,queryKeysOne:s,queryKeysList:i,queryKeysInfiniteList:r})=>{let p=n=>!n||!(n.data instanceof Array)?n:{...n,data:[t,...n.data]};s&&s.forEach(n=>{e.setQueryData(n,t)}),i&&i.forEach(n=>{e.setQueriesData({queryKey:n},p)}),r&&r.forEach(n=>{e.setQueriesData({queryKey:n},a=>a&&{...a,pages:a.pages.map(p)})})};var G=({queryClient:e,ids:t,queryKeysOne:s,queryKeysList:i,queryKeysInfiniteList:r})=>{let p=n=>!n||!(n.data instanceof Array)?n:{...n,data:n.data.filter(a=>!t.some(u=>String(u)===String(a.id)))};s&&s.forEach(n=>{e.removeQueries({queryKey:n})}),i&&i.forEach(n=>{e.setQueriesData({queryKey:n},p)}),r&&r.forEach(n=>{e.setQueriesData({queryKey:n},a=>a&&{...a,pages:a.pages.map(p)})})};var f={getOne:(e,t)=>["get-one",e.path,e.params,String(t)],getOneArray:(e,t)=>t.map(s=>["get-one",e.path,e.params,String(s)]),getList:e=>["get-list",e.path,e.params],getInfiniteList:e=>["get-infinite-list",e.path,e.params],getDataQuery:e=>["query-data",e.path,e.params]};import{deepEqual as he}from"fast-equals";var Qt=({queryClient:e,queryKeys:t})=>{e.invalidateQueries({predicate:s=>{let i=s.queryKey;return t.some(p=>p.every(n=>i.some(a=>he(a,n))))}})};var M=({queryClient:e,queryKeys:t})=>{t.forEach(s=>{e.invalidateQueries({queryKey:s})})};var H=({queryClient:e,data:t,ids:s,queryKeysOne:i,queryKeysList:r,queryKeysInfiniteList:p})=>{let n=a=>!a||!(a.data instanceof Array)?a:{...a,data:a.data.map(u=>s.some(c=>String(c)===String(u.id))?S(u,t):u)};i&&i.forEach(a=>{e.setQueriesData({queryKey:a},u=>!u||!(u.data instanceof Object)||!(t instanceof Object)?u:{...u,data:S(u.data,t)})}),r&&r.forEach(a=>{e.setQueriesData({queryKey:a},n)}),p&&p.forEach(a=>{e.setQueriesData({queryKey:a},u=>u&&{...u,pages:u.pages.map(n)})})};var _=({resourcePath:e,mutationOptions:t,mode:s={optimistic:!0,undoable:!0},extraResources:i=[],type:r="many"})=>{let{apiUrl:p,apiClient:n,apiEnsureTrailingSlash:a,toastUndo:u}=R(),c=de(),o=Pe([]),y=()=>{o.current.forEach(([l,m])=>{c.setQueryData(l,m)})},{mutate:P,...Q}=fe({...t,mutationKey:[r==="many"?"delete-many":"delete-one",e,...t?.mutationKey?t.mutationKey:[]],mutationFn:async l=>{let m=`${p}/${g(l.resource,!0)}`;if(t?.mutationFn)return await t?.mutationFn({apiClient:n,variables:l,url:m});let T=r==="many"?l.ids:[l.id],d=await Promise.allSettled(T.map(h=>n({url:`${m}${h}${a?"/":""}`,method:"DELETE",...l.apiClientParams}))),D=[];return d.forEach(h=>{if(h.status==="fulfilled")D.push(h.value);else throw h.reason}),r==="many"?D:D[0]},onSuccess:(...l)=>{let m=l[1],T=[f.getList(m.resource),f.getInfiniteList(m.resource)];i.forEach(d=>{T.push(f.getList(d)),T.push(f.getInfiniteList(d))}),M({queryClient:c,queryKeys:T}),t?.onSuccess&&t.onSuccess(...l)},onError:(...l)=>{t?.onError&&t.onError(...l),y()}});return{mutation:Q,delete:async({resourceParams:l,undoMessage:m,...T})=>{let d={path:e,params:l},D=r==="many"?T.ids:[T.id];if(s.optimistic){let h=f.getOneArray(d,D),F=[f.getList(d)],K=[f.getInfiniteList(d)];i.forEach(x=>{h.push(...f.getOneArray(x,D)),F.push(f.getList(x)),K.push(f.getInfiniteList(x))}),o.current=await U(c,[...h,...F,...K]),G({queryClient:c,ids:D,queryKeysOne:h,queryKeysList:F,queryKeysInfiniteList:K})}if(s.undoable){let h=D.length>1;b.once("end",F=>{F?y():P({...T,resource:d})}),u({message:m||`Element${h?"s":""} deleted`,type:h?"delete-many":"delete-one"})}else P({...T,resource:d})}}},Bt=e=>_({...e,type:"one"}),Vt=e=>_({...e,type:"many"});import{useMutation as De,useQueryClient as Fe}from"@tanstack/react-query";import{useRef as Qe}from"react";var J=({resourcePath:e,mutationOptions:t,mode:s={optimistic:!0,undoable:!0},extraResources:i=[],type:r="many"})=>{let{apiUrl:p,apiClient:n,apiEnsureTrailingSlash:a,toastUndo:u}=R(),c=Fe(),o=Qe([]),y=()=>{o.current.forEach(([l,m])=>{c.setQueryData(l,m)})},{mutate:P,...Q}=De({...t,mutationKey:[r==="many"?"update-many":"update-one",e,...t?.mutationKey?t.mutationKey:[]],mutationFn:async l=>{let m=`${p}/${g(l.resource,!0)}`;if(t?.mutationFn)return await t?.mutationFn({apiClient:n,variables:l,url:m});let T=r==="many"?l.ids:[l.id],d=await Promise.allSettled(T.map(h=>n({url:`${m}${h}${a?"/":""}`,method:"PATCH",data:l.data,...l.apiClientParams}))),D=[];return d.forEach(h=>{if(h.status==="fulfilled")D.push(h.value);else throw h.reason}),r==="many"?D:D[0]},onSuccess:(...l)=>{let m=l[1];if(!s.optimistic){let T=r==="many"?m.ids:[m.id],d=[...f.getOneArray(m.resource,T),f.getList(m.resource),f.getInfiniteList(m.resource)];i.forEach(D=>{d.push(...f.getOneArray(D,T)),d.push(f.getList(D)),d.push(f.getInfiniteList(D))}),M({queryClient:c,queryKeys:d})}t?.onSuccess&&t.onSuccess(...l)},onError:(...l)=>{t?.onError&&t.onError(...l),y()}});return{mutation:Q,update:async({resourceParams:l,undoMessage:m,...T})=>{let d={path:e,params:l},D=r==="many"?T.ids:[T.id];if(s.optimistic){let h=f.getOneArray(d,D),F=[f.getList(d)],K=[f.getInfiniteList(d)];i.forEach(x=>{h.push(...f.getOneArray(x,D)),F.push(f.getList(x)),K.push(f.getInfiniteList(x))}),o.current=await U(c,[...h,...F,...K]),H({queryClient:c,data:T.data,ids:D,queryKeysOne:h,queryKeysList:F,queryKeysInfiniteList:K})}if(s.undoable){let h=D.length>1;b.once("end",F=>{F?y():P({...T,resource:d})}),u({message:m||`Element${h?"s":""} updated`,type:h?"update-many":"update-one"})}else P({...T,resource:d})}}},Ht=e=>J({...e,type:"one"}),_t=e=>J({...e,type:"many"});import{useMutation as ge,useQueryClient as Re}from"@tanstack/react-query";var tr=({resourcePath:e,mutationOptions:t,extraResources:s=[]})=>{let{apiUrl:i,apiClient:r,apiEnsureTrailingSlash:p}=R(),n=Re(),{mutate:a,...u}=ge({...t,mutationKey:["create",e,...t?.mutationKey?t.mutationKey:[]],mutationFn:async o=>{let y=`${i}/${g(o.resource,p)}`;return t?.mutationFn?await t?.mutationFn({apiClient:r,variables:o,url:y}):await r({url:y,method:"POST",data:o.data,...o.apiClientParams})},onSuccess:(...o)=>{let y=o[0],P=o[1],{id:Q}=y.data,C=[f.getOne(P.resource,Q)],l=[f.getList(P.resource)],m=[f.getInfiniteList(P.resource)];s.forEach(T=>{C.push(f.getOne(T,Q)),l.push(f.getList(T)),m.push(f.getInfiniteList(T))}),N({queryClient:n,data:o[0],queryKeysOne:C.map(T=>[...T,{}]),queryKeysList:l,queryKeysInfiniteList:m}),M({queryClient:n,queryKeys:[...l,...m]}),t?.onSuccess&&t.onSuccess(...o)}});return{mutation:u,create:({resourceParams:o,...y})=>{a({...y,resource:{path:e,params:o}})}}};import{useQuery as Ce}from"@tanstack/react-query";var nr=({queryOptions:e,resource:t,params:s={},apiClientParams:i})=>{let{apiUrl:r,apiClient:p,apiEnsureTrailingSlash:n}=R();return Ce({...e,queryKey:["query-data",t.path,t.params,s,...e?.queryKey?e.queryKey:[]],queryFn:async({queryKey:u})=>{let c={resource:t,params:s,queryKey:u},o=`${r}/${g(c.resource,n)}`;return e?.queryFn?await e?.queryFn({apiClient:p,variables:c,url:o}):await p({url:o,method:"GET",params:s,...i})}})};import{useMutation as Ke}from"@tanstack/react-query";var yr=({resourcePath:e,mutationOptions:t})=>{let{apiUrl:s,apiClient:i,apiEnsureTrailingSlash:r}=R(),{mutate:p,...n}=Ke({...t,mutationKey:["mutate-data",e,...t?.mutationKey?t.mutationKey:[]],mutationFn:async u=>{let c=`${s}/${g(u.resource,r)}`;return t?.mutationFn?await t?.mutationFn({apiClient:i,variables:u,url:c}):await i({url:c,data:u.data,...u.apiClientParams})}});return{mutation:n,mutate:async({resourceParams:u,...c})=>{p({...c,resource:{path:e,params:u}})}}};export{L as CustomError,Ze as RQWrapper,ve as ToastBar,N as addItemFromQueryCache,G as deleteItemsFromQueryCache,$ as fetcher,g as getUrlFromResource,f as helpersQueryKeys,Qt as invalidateMatchingQueries,M as invalidateQueries,je as resolveToastValue,w as toast,H as updateItemsFromQueryCache,tr as useCreate,yr as useDataMutate,nr as useDataQuery,Vt as useDeleteMany,Bt as useDeleteOne,ct as useGetInfiniteList,st as useGetList,ht as useGetOne,R as useRQWrapperContext,_t as useUpdateMany,Ht as useUpdateOne};
//# sourceMappingURL=index.mjs.map