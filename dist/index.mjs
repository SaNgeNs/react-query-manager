export*from"@tanstack/react-query";import{useQuery as me}from"@tanstack/react-query";import Y from"eventemitter3";function U(e,t){let r={...e};if(e instanceof Object&&t instanceof Object){for(let n in t)if(n in e){let a=e[n],y=t[n];typeof a==typeof y&&(Array.isArray(a)&&Array.isArray(y)||a!==null&&!Array.isArray(a)&&typeof a=="object"&&!Array.isArray(y)&&typeof y=="object"||typeof a!="object"&&typeof y!="object")&&(typeof a=="object"&&a!==null&&!Array.isArray(a)?r[n]=U(a,y):r[n]=y)}}return r}var L=async(e,t)=>{let r=t.reduce((n,a)=>n.concat(e.getQueriesData({queryKey:a})),[]);return await Promise.all(r.map(([n])=>e.cancelQueries({queryKey:n}))),r};function A(e){return e.replace(/^\/+/,"").replace(/\/+$/,"")}var B=new Y,b={once:(e,t)=>{B.once(e,t)},emit:(e,t)=>{B.emit(e,t)}};var C=(e,t)=>{let r=A(e.path.replace(/{(\w+)}/g,(n,a)=>e.params[a].toString()));return t?`${r}/`:r};import{QueryClient as ie,QueryClientProvider as ue}from"@tanstack/react-query";import{ReactQueryDevtools as pe}from"@tanstack/react-query-devtools";import E,{createContext as ce,useCallback as k,useContext as ye,useMemo as W}from"react";var S=class e extends Error{constructor(r,n,a){super(r);this.message=r;this.status=n;this.data=a;Object.setPrototypeOf(this,e.prototype),this.name=this.constructor.name,typeof Error.captureStackTrace=="function"?Error.captureStackTrace(this,this.constructor):this.stack=new Error(r).stack,this.stack=new Error().stack,console.error(this.message,this)}};var X=e=>{if(e!==null&&typeof e=="object"){let t={};return Object.entries(e).forEach(([n,a])=>{(a||typeof a=="boolean"||typeof a=="number")&&(t[n]=a)}),t}return{}};function q(e){return encodeURIComponent(e).replace(/%3A/gi,":").replace(/%24/g,"$").replace(/%2C/gi,",").replace(/%20/g,"+").replace(/%5B/gi,"[").replace(/%5D/gi,"]")}var $=e=>{let{onSuccess:t,onError:r}=e,n=e.data instanceof FormData,a=(()=>{let s=e.url;if(e.params){let o=X(e.params);if(e.queryParamsSerializer)s+=`?${e.queryParamsSerializer(e.params)}`;else if(Object.keys(o).length>0){let c=[];for(let P in o)o.hasOwnProperty(P)&&(Array.isArray(o[P])?o[P].forEach(F=>{c.push(`${q(P)}${e.queryArrayParamStyle==="indexedArray"?"[]":""}=${q(F)}`)}):c.push(`${q(P)}=${q(o[P])}`));s+=`?${c.join("&")}`}}let[i,p]=s.split("?");return`${i}${p?`?${p}`:""}`})(),y=n?e.data:e.data?JSON.stringify(e.data):"",u={method:e.method,headers:{...!n&&{"Content-Type":"application/json"},...e.authorization&&{Authorization:e.authorization},...e.headers},...y&&{body:y},...e.options};return fetch(a,u).then(async s=>{let i=await(async()=>{try{let o=s.headers.get("Content-Type")?.toLowerCase()||"";return o.includes("application/json")?await s.json():o.includes("text/plain")||o.includes("text/csv")||o.includes("application/xml")||o.includes("text/xml")||o.includes("application/javascript")||o.includes("text/html")?await s.text():o.includes("multipart/form-data")?await s.formData():await s.blob()}catch(o){throw console.error("Error handling response:",o),o}})(),p={};return s.headers.forEach((o,c)=>{p[c]=o}),{status:s.status,statusText:s.statusText,headers:p,data:i}}).then(s=>{if(s.status<200||s.status>=300){let i=new S(`Request failed with status code: ${s.status}`,s.status,s.data);return r&&r(i,e),Promise.reject(i)}return t&&t(s,e),Promise.resolve(s)}).catch(s=>Promise.reject(new S(s.message)))};import I,{useCallback as Z}from"react";import{resolveValue as V,useToaster as ee}from"react-hot-toast/headless";var te=(()=>{let e;return()=>{if(e===void 0&&typeof window<"u"){let t=matchMedia("(prefers-reduced-motion: reduce)");e=!t||t.matches}return e}})();function re({id:e,className:t,style:r,onHeightUpdate:n,children:a}){let y=Z(u=>{if(u){let s=()=>{let{height:i}=u.getBoundingClientRect();n(e,i)};s(),new MutationObserver(s).observe(u,{subtree:!0,childList:!0,characterData:!0})}},[e,n]);return I.createElement("div",{ref:y,className:t,style:r},a)}var ae=(e,t)=>{let r=e.includes("top"),n=r?{top:0}:{bottom:0},a=e.includes("center")?{justifyContent:"center"}:e.includes("right")?{justifyContent:"flex-end"}:{};return{left:0,right:0,display:"flex",position:"absolute",transition:te()?void 0:"all 230ms cubic-bezier(.21,1.02,.73,1)",transform:`translateY(${t*(r?1:-1)}px)`,...n,...a}},O=16;function j({reverseOrder:e,position:t="top-center",toastOptions:r,gutter:n,children:a,containerStyle:y,containerClassName:u}){let{toasts:s,handlers:i}=ee(r);return I.createElement("div",{style:{position:"fixed",zIndex:9999,top:O,left:O,right:O,bottom:O,pointerEvents:"none",...y},className:u,onMouseEnter:i.startPause,onMouseLeave:i.endPause},s.map(p=>{let o=p.position||t,c={...p,position:o},P=i.calculateOffset(c,{reverseOrder:e,gutter:n,defaultPosition:t}),F=ae(o,P);return I.createElement(re,{id:c.id,key:c.id,onHeightUpdate:i.updateHeight,style:{...F,pointerEvents:"auto"}},c.type==="custom"?V(p.message,c):a?a(c):I.createElement("div",{style:{display:p.visible?"flex":"none"}},V(c.message,c)))}))}import v from"react-hot-toast/headless";import{ToastBar as se,resolveValue as oe}from"react-hot-toast";var{remove:Be,...ne}=v,w=Object.assign((...e)=>v(...e),ne),Ve=se,je=oe;var z=ce({apiUrl:"",apiEnsureTrailingSlash:!1,apiClient:$,toastUndo:()=>{}}),R=()=>ye(z);function Xe({children:e,config:t={},apiUrl:r,apiClient:n=$,apiEnsureTrailingSlash:a=!1,apiAuthorization:y,apiHeaders:u,apiOnSuccess:s,apiOnError:i,isDevTools:p,devToolsOptions:o,toast:c}){let P=W(()=>new ie({...t,defaultOptions:{...t?.defaultOptions,queries:{gcTime:3e5,staleTime:3e5,retry:!1,...t?.defaultOptions?.queries}}}),[]),F=k(m=>{let T=y?y():"",d=u?u():{},D=(...g)=>{s&&s(...g),m.onSuccess&&m.onSuccess(...g)},h=(...g)=>{i&&i(...g),m.onError&&m.onError(...g)};return n({...m,headers:m.headers?{...d,...m.headers}:d,authorization:m.authorization||T,onSuccess:D,onError:h})},[]),Q=k(m=>{let T=!1;w.dismiss();let d=()=>{T=!0,b.emit("end",!0),w.dismiss()},D=c?.customUndoContent?c?.customUndoContent({message:m.message,onUndo:d,type:m.type}):null;w.success(h=>(!h.visible&&!T&&(T=!0,b.emit("end",!1)),D||E.createElement(E.Fragment,null,m.message,E.createElement("span",{style:{marginLeft:"10px",cursor:"pointer"},onClick:d,role:"button",tabIndex:0,"aria-label":"Undo",title:"Undo"},"UNDO"))),{duration:c?.globalProps?.toastOptions?.duration||5e3})},[]),l=W(()=>({apiUrl:A(r),apiClient:F,apiEnsureTrailingSlash:a,toastUndo:Q}),[r,F,Q,a]);return E.createElement(ue,{client:P},E.createElement(j,{...c?.globalProps},c?.wrapper),E.createElement(z.Provider,{value:l},e),p&&E.createElement(pe,{buttonPosition:"bottom-right",initialIsOpen:!1,...o}))}var at=({queryOptions:e,resource:t,params:r={},apiClientParams:n})=>{let{apiUrl:a,apiClient:y,apiEnsureTrailingSlash:u}=R();return me({...e,queryKey:["get-list",t.path,t.params,r,...e?.queryKey?e.queryKey:[]],queryFn:async({queryKey:i})=>{let p={resource:t,params:r,queryKey:i},o=`${a}/${C(p.resource,u)}`;return e?.queryFn?await e?.queryFn({apiClient:y,variables:p,url:o}):await y({url:o,method:"GET",params:r,...n})}})};import{useInfiniteQuery as le}from"@tanstack/react-query";var pt=({queryOptions:e,resource:t,params:r={},apiClientParams:n,pagination:a})=>{let{apiUrl:y,apiClient:u,apiEnsureTrailingSlash:s}=R();return le({initialPageParam:1,getNextPageParam:(...p)=>{let o=p[0],c=Number(p[2]);if(o?.data?.length)return c+1},getPreviousPageParam:(...p)=>{let o=Number(p[2]);if(!(o<=1))return o-1},...e,queryKey:["get-infinite-list",t.path,t.params,a,r,...e?.queryKey?e.queryKey:[]],queryFn:async({queryKey:p,pageParam:o})=>{let c={resource:t,params:{...r,[a.page[0]]:o,[a.per_page[0]]:a.per_page[1]},queryKey:p},P=`${y}/${C(c.resource,s)}`;return e?.queryFn?await e?.queryFn({apiClient:u,variables:c,url:P}):await u({url:P,method:"GET",params:c.params,...n})}})};import{useQuery as Te}from"@tanstack/react-query";var Tt=({resource:e,id:t,queryOptions:r,params:n={},apiClientParams:a})=>{let{apiUrl:y,apiClient:u,apiEnsureTrailingSlash:s}=R();return Te({...r,queryKey:["get-one",e.path,e.params,String(t),n,...r?.queryKey?r.queryKey:[]],queryFn:async({queryKey:p})=>{let o={id:t,resource:e,params:n,queryKey:p},c=`${y}/${C(o.resource,!0)}`;return r?.queryFn?await r?.queryFn({apiClient:u,variables:o,url:c}):await u({url:`${c}${o.id}${s?"/":""}`,method:"GET",params:n,...a})}})};import{useMutation as he,useQueryClient as fe}from"@tanstack/react-query";import{useRef as de}from"react";var N=({queryClient:e,ids:t,queryKeysOne:r,queryKeysList:n,queryKeysInfiniteList:a})=>{let y=u=>!u||!(u.data instanceof Array)?u:{...u,data:u.data.filter(s=>!t.some(i=>String(i)===String(s.id)))};r&&r.forEach(u=>{e.removeQueries({queryKey:u})}),n&&n.forEach(u=>{e.setQueriesData({queryKey:u},y)}),a&&a.forEach(u=>{e.setQueriesData({queryKey:u},s=>s&&{...s,pages:s.pages.map(y)})})},G=({queryClient:e,data:t,ids:r,queryKeysOne:n,queryKeysList:a,queryKeysInfiniteList:y})=>{let u=s=>!s||!(s.data instanceof Array)?s:{...s,data:s.data.map(i=>r.some(p=>String(p)===String(i.id))?U(i,t):i)};n&&n.forEach(s=>{e.setQueriesData({queryKey:s},i=>!i||!(i.data instanceof Object)||!(t instanceof Object)?i:{...i,data:U(i.data,t)})}),a&&a.forEach(s=>{e.setQueriesData({queryKey:s},u)}),y&&y.forEach(s=>{e.setQueriesData({queryKey:s},i=>i&&{...i,pages:i.pages.map(u)})})},f={getOne:(e,t)=>["get-one",e.path,e.params,String(t)],getOneArray:(e,t)=>t.map(r=>["get-one",e.path,e.params,String(r)]),getList:e=>["get-list",e.path,e.params],getInfiniteList:e=>["get-infinite-list",e.path,e.params]};var M=({queryClient:e,queryKeys:t})=>{t.forEach(r=>{e.invalidateQueries({queryKey:r})})},H=({queryClient:e,queryKeys:t,data:r})=>{t.forEach(n=>{e.setQueryData(n,r)})};var _=({resourcePath:e,mutationOptions:t,mode:r={optimistic:!0,undoable:!0},extraResources:n=[],type:a="many"})=>{let{apiUrl:y,apiClient:u,apiEnsureTrailingSlash:s,toastUndo:i}=R(),p=fe(),o=de([]),c=()=>{o.current.forEach(([l,m])=>{p.setQueryData(l,m)})},{mutate:P,...F}=he({...t,mutationKey:[a==="many"?"delete-many":"delete-one",e,...t?.mutationKey?t.mutationKey:[]],mutationFn:async l=>{let m=`${y}/${C(l.resource,!0)}`;if(t?.mutationFn)return await t?.mutationFn({apiClient:u,variables:l,url:m});let T=a==="many"?l.ids:[l.id],d=await Promise.allSettled(T.map(h=>u({url:`${m}${h}${s?"/":""}`,method:"DELETE",...l.apiClientParams}))),D=[];return d.forEach(h=>{if(h.status==="fulfilled")D.push(h.value);else throw h.reason}),a==="many"?D:D[0]},onSuccess:(...l)=>{let m=l[1],T=[f.getList(m.resource),f.getInfiniteList(m.resource)];n.forEach(d=>{T.push(f.getList(d)),T.push(f.getInfiniteList(d))}),M({queryClient:p,queryKeys:T}),t?.onSuccess&&t.onSuccess(...l)},onError:(...l)=>{t?.onError&&t.onError(...l),c()}});return{mutation:F,delete:async({resourceParams:l,undoMessage:m,...T})=>{let d={path:e,params:l},D=a==="many"?T.ids:[T.id];if(r.optimistic){let h=f.getOneArray(d,D),g=[f.getList(d)],x=[f.getInfiniteList(d)];n.forEach(K=>{h.push(...f.getOneArray(K,D)),g.push(f.getList(K)),x.push(f.getInfiniteList(K))}),o.current=await L(p,[...h,...g,...x]),N({queryClient:p,ids:D,queryKeysOne:h,queryKeysList:g,queryKeysInfiniteList:x})}if(r.undoable){let h=D.length>1;b.once("end",g=>{g?c():P({...T,resource:d})}),i({message:m||`Element${h?"s":""} deleted`,type:h?"delete-many":"delete-one"})}else P({...T,resource:d})}}},Kt=e=>_({...e,type:"one"}),bt=e=>_({...e,type:"many"});import{useMutation as Pe,useQueryClient as De}from"@tanstack/react-query";import{useRef as ge}from"react";var J=({resourcePath:e,mutationOptions:t,mode:r={optimistic:!0,undoable:!0},extraResources:n=[],type:a="many"})=>{let{apiUrl:y,apiClient:u,apiEnsureTrailingSlash:s,toastUndo:i}=R(),p=De(),o=ge([]),c=()=>{o.current.forEach(([l,m])=>{p.setQueryData(l,m)})},{mutate:P,...F}=Pe({...t,mutationKey:[a==="many"?"update-many":"update-one",e,...t?.mutationKey?t.mutationKey:[]],mutationFn:async l=>{let m=`${y}/${C(l.resource,!0)}`;if(t?.mutationFn)return await t?.mutationFn({apiClient:u,variables:l,url:m});let T=a==="many"?l.ids:[l.id],d=await Promise.allSettled(T.map(h=>u({url:`${m}${h}${s?"/":""}`,method:"PATCH",data:l.data,...l.apiClientParams}))),D=[];return d.forEach(h=>{if(h.status==="fulfilled")D.push(h.value);else throw h.reason}),a==="many"?D:D[0]},onSuccess:(...l)=>{let m=l[1];if(!r.optimistic){let T=a==="many"?m.ids:[m.id],d=[...f.getOneArray(m.resource,T),f.getList(m.resource),f.getInfiniteList(m.resource)];n.forEach(D=>{d.push(...f.getOneArray(D,T)),d.push(f.getList(D)),d.push(f.getInfiniteList(D))}),M({queryClient:p,queryKeys:d})}t?.onSuccess&&t.onSuccess(...l)},onError:(...l)=>{t?.onError&&t.onError(...l),c()}});return{mutation:F,update:async({resourceParams:l,undoMessage:m,...T})=>{let d={path:e,params:l},D=a==="many"?T.ids:[T.id];if(r.optimistic){let h=f.getOneArray(d,D),g=[f.getList(d)],x=[f.getInfiniteList(d)];n.forEach(K=>{h.push(...f.getOneArray(K,D)),g.push(f.getList(K)),x.push(f.getInfiniteList(K))}),o.current=await L(p,[...h,...g,...x]),G({queryClient:p,data:T.data,ids:D,queryKeysOne:h,queryKeysList:g,queryKeysInfiniteList:x})}if(r.undoable){let h=D.length>1;b.once("end",g=>{g?c():P({...T,resource:d})}),i({message:m||`Element${h?"s":""} updated`,type:h?"update-many":"update-one"})}else P({...T,resource:d})}}},It=e=>J({...e,type:"one"}),wt=e=>J({...e,type:"many"});import{useMutation as Fe,useQueryClient as Ce}from"@tanstack/react-query";var Wt=({resourcePath:e,mutationOptions:t,extraResources:r=[]})=>{let{apiUrl:n,apiClient:a,apiEnsureTrailingSlash:y}=R(),u=Ce(),{mutate:s,...i}=Fe({...t,mutationKey:["create",e,...t?.mutationKey?t.mutationKey:[]],mutationFn:async o=>{let c=`${n}/${C(o.resource,y)}`;return t?.mutationFn?await t?.mutationFn({apiClient:a,variables:o,url:c}):await a({url:c,method:"POST",data:o.data,...o.apiClientParams})},onSuccess:(...o)=>{let c=o[0],P=o[1],{id:F}=c.data,Q=[f.getOne(P.resource,F)],l=[f.getList(P.resource)],m=[f.getInfiniteList(P.resource)];r.forEach(T=>{Q.push(f.getOne(T,F)),l.push(f.getList(T)),m.push(f.getInfiniteList(T))}),H({queryClient:u,queryKeys:Q.map(T=>[...T,{}]),data:o[0]}),M({queryClient:u,queryKeys:[...l,...m]}),t?.onSuccess&&t.onSuccess(...o)}});return{mutation:i,create:({resourceParams:o,...c})=>{s({...c,resource:{path:e,params:o}})}}};import{useQuery as Re}from"@tanstack/react-query";var _t=({queryOptions:e,resource:t,params:r={},apiClientParams:n})=>{let{apiUrl:a,apiClient:y,apiEnsureTrailingSlash:u}=R();return Re({...e,queryKey:["query-data",t.path,t.params,r,...e?.queryKey?e.queryKey:[]],queryFn:async({queryKey:i})=>{let p={resource:t,params:r,queryKey:i},o=`${a}/${C(p.resource,u)}`;return e?.queryFn?await e?.queryFn({apiClient:y,variables:p,url:o}):await y({url:o,method:"GET",params:r,...n})}})};import{useMutation as Qe}from"@tanstack/react-query";var er=({resourcePath:e,mutationOptions:t})=>{let{apiUrl:r,apiClient:n,apiEnsureTrailingSlash:a}=R(),{mutate:y,...u}=Qe({...t,mutationKey:["mutate-data",e,...t?.mutationKey?t.mutationKey:[]],mutationFn:async i=>{let p=`${r}/${C(i.resource,a)}`;return t?.mutationFn?await t?.mutationFn({apiClient:n,variables:i,url:p}):await n({url:p,data:i.data,...i.apiClientParams})}});return{mutation:u,mutate:async({resourceParams:i,...p})=>{y({...p,resource:{path:e,params:i}})}}};export{S as CustomError,Xe as RQWrapper,Ve as ToastBar,N as deleteItemsFromQueryCache,$ as fetcher,C as getUrlFromResource,f as helpersQueryKeys,je as resolveToastValue,w as toast,G as updateItemsFromQueryCache,Wt as useCreate,er as useDataMutate,_t as useDataQuery,bt as useDeleteMany,Kt as useDeleteOne,pt as useGetInfiniteList,at as useGetList,Tt as useGetOne,R as useRQWrapperContext,wt as useUpdateMany,It as useUpdateOne};
//# sourceMappingURL=index.mjs.map